import java.util.*;

/*
public class TreeNode {
    int val = 0;
    TreeNode left = null;
    TreeNode right = null;

    public TreeNode(int val) {
        this.val = val;

    }

}
*/
public class Solution {
    public ArrayList<ArrayList<Integer>> Print(TreeNode pRoot) {
		ArrayList<ArrayList<Integer>> result=new ArrayList<ArrayList<Integer>>();
        if(pRoot==null){
            return result;
        }
        Stack<TreeNode> stack1=new Stack<TreeNode>();
        Stack<TreeNode> stack2=new Stack<TreeNode>();
        stack1.push(pRoot);
        while(!stack1.empty()||!stack2.empty()){
            ArrayList<Integer> list=new ArrayList<Integer>();
            while(!stack1.empty()){
                TreeNode node=stack1.pop();
                list.add(node.val);
                if(node.left!=null){
                    stack2.push(node.left);
                }
                if(node.right!=null){
                    stack2.push(node.right);
                }
            }
            if(!list.isEmpty())result.add(list);
            list=new ArrayList<Integer>();
            while(!stack2.empty()){
                TreeNode node=stack2.pop();
                list.add(node.val);
                if(node.right!=null){
                    stack1.push(node.right);
                }
                if(node.left!=null){
                    stack1.push(node.left);
                }
            }
            if(!list.isEmpty())result.add(list);
        }
        return result;
    }

}